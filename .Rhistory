library(jsonlite)
cen <- fromJSON("https://www12.statcan.gc.ca/rest/census-recensement/CPR2016.json?lang=E&dguid=2016A000011124&topic=1&notes=0")
View(cen)
file.edit('~/.Renviron')
library(jsonlite)
cen <- fromJSON("https://www12.statcan.gc.ca/rest/census-recensement/CPR2016.json?lang=E&dguid=2016A000011124&topic=1&notes=0")
View(cen)
??fromJSON
cen <- jsonlite::fromJSON("https://www12.statcan.gc.ca/rest/census-recensement/CPR2016.json?lang=E&dguid=2016A000011124&topic=1&notes=0")
cen <- json_file <- stream_in(file("https://www12.statcan.gc.ca/rest/census-recensement/CPR2016.json?lang=E&dguid=2016A000011124&topic=1&notes=0"))
cen <- fromJSON(sprintf("[%s]", paste(readLines("https://www12.statcan.gc.ca/rest/census-recensement/CPR2016.json?lang=E&dguid=2016A000011124&topic=1&notes=0"), collapse=",")))
??tidyjson
??stream_in
cen <- json_file <- stream_in(url("https://www12.statcan.gc.ca/rest/census-recensement/CPR2016.json?lang=E&dguid=2016A000011124&topic=1&notes=0"))
cen <- jsonlite::fromJSON(toJSON("https://www12.statcan.gc.ca/rest/census-recensement/CPR2016.json?lang=E&dguid=2016A000011124&topic=1&notes=0"))
View(cen)
json <- getURL("https://www12.statcan.gc.ca/rest/census-recensement/CPR2016.json?lang=E&dguid=2016A000011124&topic=1&notes=0")
cen <- jsonlite::fromJSON(toJSON(json))
??getURL
library(RCurl)
json <- getURL("https://www12.statcan.gc.ca/rest/census-recensement/CPR2016.json?lang=E&dguid=2016A000011124&topic=1&notes=0")
cen <- jsonlite::fromJSON(toJSON(json))
View(cen)
test <- json.pop[]
test <- json.pop[2]
test <- json.pop[,2]
test <- json[,2]
test <- json[1:2]
View*test
View(test)
substring(json,2)
test <- substring(json,3)
json <- getURL("https://www12.statcan.gc.ca/rest/census-recensement/CPR2016.json?lang=E&dguid=2016A000011124&topic=1&notes=0")
json <- substring(json,3)
cen <- jsonlite::fromJSON(toJSON(json))
View(cen)
test2 <- toJSON(json)
cen <- fromJSON(json2)
cen <- fromJSON(test2)
View(test2)
??fromHSON
??fromJSON
cen <- fromJSON(test2)
cen <- jsonlite::fromJSON(test2)
json <- getURL("https://www12.statcan.gc.ca/rest/census-recensement/CPR2016.json?lang=E&dguid=2016A000011124&topic=1&notes=0")
json2 <- substring(json,3)
json3 <- toJSON(json2)
cen <- jsonlite::fromJSON(json3)
gc()
json <- getURL("https://www12.statcan.gc.ca/rest/census-recensement/CPR2016.json?lang=E&dguid=2016A000011124&topic=1&notes=0")
json2 <- substring(json,3)
json3 <- jsonlite::toJSON(json2)
cen <- jsonlite::fromJSON(json3)
cen <- jsonlite::fromJSON(test2)
cen <- str(jsonlite::fromJSON(json3))
cen <- str(jsonlite::fromJSON(json2))
cen <- jsonlite::fromJSON(json2)
View(cen)
View(cen@data)
View(cen@DATA)
gc()
setwd("U:/SP-PS/DMD/Data Science/02-OtherAnalyticsProjects/2019-Geo/3-Disseminate/Seminars/Session 2/r-choropleth")
library(rgdal)
library(tidyverse)
library(tmap)
# LOAD DATA
geo_boundary <- rgdal::readOGR("./data", "lcsd000b16a_simplified", encoding = "UTF-8")
census <- read_csv("./data/census_variables.csv")
census$CSDUID <- as.factor(census$CSDUID)
geo_boundary@data <- left_join(geo_boundary@data, census, by = "CSDUID")
geo_boundary_filtered <- geo_boundary[geo_boundary$PRUID == 59,]
plot(geo_boundary_filtered)
tmap_mode("static") # can change view to static
tm_shape(geo_boundary_filtered) +
tm_polygons("Median Age", palette="RdYlGn", style="jenks", n=8, title="Happy Planet Index", id="name")+
tm_style("grey") +
tm_scale_bar(position = c("right", "top"))
library(tmap)
library(sf)
library(tmap)
gc()
library(rgdal)
library(tidyverse)
library(tmap)
install.packages("tmap")
library(rgdal)
library(tidyverse)
library(tmap)
tmap_mode("static") # can change view to static
??tmap
librarY(sf)
library(sf)
library(rgdal)
install.packages('sf')
install.packages("sf")
library(rgdal)
library(sf)
library(tmap)
install.packages("sf")
library(tmap)
geo_boundary <- rgdal::readOGR("./data", "lcsd000b16a_simplified", encoding = "UTF-8")
census <- read_csv("./data/census_variables.csv")
library(tidyverse)
census <- read_csv("./data/census_variables.csv")
census$CSDUID <- as.factor(census$CSDUID)
geo_boundary@data <- left_join(geo_boundary@data, census, by = "CSDUID")
# FILTER DATA TO ONE PROVINCE
geo_boundary_filtered <- geo_boundary[geo_boundary$PRUID == 59,]
plot(geo_boundary_filtered)
tmap_mode("static") # can change view to static
tm_shape(geo_boundary_filtered) +
tm_polygons("Median Age", palette="RdYlGn", style="jenks", n=8, title="Happy Planet Index", id="name")+
tm_style("grey") +
tm_scale_bar(position = c("right", "top"))
hist(geo_boundary_filtered$'Median Age')
variable <- 'Median Age'
# DISTRIBUTION
hist(geo_boundary_filtered$variable)
# DISTRIBUTION
hist(geo_boundary_filtered$[variable])
variable <- geo_boundary_filtered$'Median Age'
# DISTRIBUTION
hist(variable)
?hist
hist(variable, main=variable_name)
variable_name <- "Median Age"
# DISTRIBUTION
hist(variable, main=variable_name)
hist(variable, main=variable_name, xlab=variable_name)
hist(variable, main=paste("Distribution of ", variable_name), xlab=variable_name)
tm_shape(geo_boundary_filtered) +
tm_bubbles(variable_name)
tm_shape(geo_boundary_filtered) +
# tm_bubbles(variable_name)
tm_polygons("Median Age", palette="RdYlGn", style="jenks", n=8, title="Happy Planet Index", id="name")+
tm_style("grey") +
tm_scale_bar(position = c("right", "top"))
tmap_mode("view") # can change view to static
# The classification methods are su
tm_shape(geo_boundary_filtered) +
# tm_bubbles(variable_name)
tm_polygons("Median Age", palette="RdYlGn", style="jenks", n=8, title="Happy Planet Index", id="name")+
tm_style("grey") +
tm_scale_bar(position = c("right", "top"))
tmap_mode("static") # can change view to static
# the chunk of code creates the map:
#tm_shape: the geographic data
#tm_polygons: the variable to be visualized and the classification method.
# The classification methods are operated via the R classIntervals package: https://www.rdocumentation.org/packages/classInt/versions/0.3-3/topics/classIntervals
# The classification methods are su
tm_shape(geo_boundary_filtered) +
# tm_bubbles(variable_name)
tm_polygons("Median Age", palette="RdYlGn", style="jenks", n=8, title="Happy Planet Index", id="name")+
tm_style("grey") +
tm_scale_bar(position = c("right", "top"))
tmap_mode("static") # can change view to static
# the chunk of code creates the map:
#tm_shape: the geographic data
#tm_polygons: the variable to be visualized and the classification method.
# The classification methods are operated via the R classIntervals package: https://www.rdocumentation.org/packages/classInt/versions/0.3-3/topics/classIntervals
# The classification methods are su
tm_shape(geo_boundary_filtered) +
# tm_bubbles(variable_name)
tm_polygons("Median Age", palette="RdYlGn", style="jenks", n=8, title="Happy Planet Index", id="name")+
tm_style("grey") +
tm_scale_bar(position = c("right", "top"))
tmap_mode("static") # can change view to static
tmap_mode("plot") # can change view to plot
# the chunk of code creates the map:
#tm_shape: the geographic data
#tm_polygons: the variable to be visualized and the classification method.
# The classification methods are operated via the R classIntervals package: https://www.rdocumentation.org/packages/classInt/versions/0.3-3/topics/classIntervals
# The classification methods are su
tm_shape(geo_boundary_filtered) +
# tm_bubbles(variable_name)
tm_polygons("Median Age", palette="RdYlGn", style="jenks", n=8, title="Happy Planet Index", id="name")+
tm_style("grey") +
tm_scale_bar(position = c("right", "top"))
tm_shape(geo_boundary_filtered) +
# tm_bubbles(variable_name)
tm_polygons("Median Age", palette="BuPu", style="quantile", n=8, title="Happy Planet Index", id="name")+
tm_scale_bar(position = c("right", "top"))
tm_shape(geo_boundary_filtered) +
# tm_bubbles(variable_name)
tm_polygons("Median Age", palette="BuPu", style="quantile", n=6, title=variable_name, id="name")+
tm_borders("white", lwd=.5)
tm_scale_bar(position = c("right", "top"))
tm_shape(geo_boundary_filtered) +
# tm_bubbles(variable_name)
tm_polygons("Median Age", palette="BuPu", style="quantile", n=6, title=variable_name, id="name")+
tm_borders("white", lwd=.5) +
tm_scale_bar(position = c("right", "top"))
??tm_polygons
tm_shape(geo_boundary_filtered) +
# tm_bubbles(variable_name)
tm_polygons("Median Age", palette="BuPu", style="quantile", n=6, title=variable_name, id="name")+
tm_borders(col="white", lwd=.5) +
tm_scale_bar(position = c("right", "top"))
tm_shape(geo_boundary_filtered) +
# tm_bubbles(variable_name)
tm_fill("Median Age", palette="BuPu", style="quantile", n=6, title=variable_name, id="name")+
tm_borders(col="white", lwd=.5) +
tm_scale_bar(position = c("right", "top"))
tm_shape(geo_boundary_filtered) +
# tm_bubbles(variable_name)
tm_fill("Median Age", palette="BuPu", style="quantile", n=6, title=variable_name, id="name")+
# tm_borders(col="white", lwd=.5) +
tm_scale_bar(position = c("right", "top"))
tm_shape(geo_boundary_filtered) +
# tm_bubbles(variable_name)
tm_fill("Median Age", palette="BuPu", style="quantile", n=6, title=variable_name, id="name")+
tm_borders(col="white", lwd=.1) +
tm_scale_bar(position = c("right", "top"))
tm_shape(geo_boundary_filtered) +
# tm_bubbles(variable_name)
tm_fill("Median Age", palette="BuPu", style="quantile", n=6, title=variable_name, id="name")+
tm_borders(col="#333", lwd=.01) +
tm_scale_bar(position = c("right", "top"))
tm_shape(geo_boundary_filtered) +
# tm_bubbles(variable_name)
tm_fill("Median Age", palette="BuPu", style="quantile", n=6, title=variable_name, id="name")+
tm_borders(col="252, 249, 249", lwd=.01) +
tm_scale_bar(position = c("right", "top"))
tm_shape(geo_boundary_filtered) +
# tm_bubbles(variable_name)
tm_fill("Median Age", palette="BuPu", style="quantile", n=6, title=variable_name, id="name")+
tm_borders(col="white", lwd=.01) +
tm_scale_bar(position = c("right", "top"))
tm_shape(geo_boundary_filtered) +
# tm_bubbles(variable_name)
tm_fill("Median Age", palette="BuPu", style="quantile", n=6, title=variable_name, id="name")+
tm_borders(col="grey", lwd=.01) +
tm_scale_bar(position = c("right", "top"))
# The classification methods are su
tm_shape(geo_boundary_filtered) +
# tm_bubbles(variable_name)
tm_fill("Median Age", palette="BuPu", style="quantile", n=6, title=variable_name, id="name")+
tm_borders(col="grey25", alpha=.01) +
tm_scale_bar(position = c("right", "top"))
tm_shape(geo_boundary_filtered) +
# tm_bubbles(variable_name)
tm_fill("Median Age", palette="BuPu", style="quantile", n=6, title=variable_name, id="name")+
tm_borders(col="grey25", alpha=.5) +
tm_scale_bar(position = c("right", "top"))
tmap_mode("view") # can change view to plot
# the chunk of code creates the map:
#tm_shape: the geographic data
#tm_polygons: the variable to be visualized and the classification method.
# The classification methods are operated via the R classIntervals package: https://www.rdocumentation.org/packages/classInt/versions/0.3-3/topics/classIntervals
# The classification methods are su
tm_shape(geo_boundary_filtered) +
# tm_bubbles(variable_name)
tm_fill("Median Age", palette="BuPu", style="quantile", n=6, title=variable_name, id="name")+
tm_borders(col="grey25", alpha=.5) +
tm_scale_bar(position = c("right", "top"))
hist(variable, main=paste("Distribution of", variable_name), xlab=variable_name)
variable <- geo_boundary_filtered$'Population'
